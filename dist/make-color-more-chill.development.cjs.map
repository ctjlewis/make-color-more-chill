{"version":3,"file":"make-color-more-chill.development.cjs","sources":["../src/index.ts"],"sourcesContent":["import c from 'chroma-js';\nimport { z } from 'zod';\n\n// the chillThreshold is the minimum acceptable contrast ratio for a given color\n// against white, as eyeballed by @christianbaroni and @mikedemarais üëÅÔ∏è\nconst chillThreshold = 2.5;\n\nexport const black = '#000000';\nexport const white = '#ffffff';\n\nexport const Theme = z.enum(['dark', 'light']);\nexport type ThemeType = z.infer<typeof Theme>;\n\nexport const fallbackColors = {\n  [Theme.enum.dark]: '#525B66',\n  [Theme.enum.light]: '#25292E',\n};\n\nfunction incrementChillness(color: string, theme: ThemeType) {\n  const slightlyChillerColor =\n    theme === Theme.enum.dark ? c(color).brighten(0.02) : c(color).darken(0.02);\n\n  return slightlyChillerColor.saturate(0.02).hex();\n}\n\nexport function isBlackOrWhite(color: string): boolean {\n  return c(color).hex() === black || c(color).hex() === white;\n}\n\nexport function isChill(color: string, background: string = white): boolean {\n  const chillness = Number(c.contrast(color, background).toFixed(2));\n  return chillness > chillThreshold;\n}\n\nexport default function makeColorMoreChill(\n  color: string,\n  background: string = white\n) {\n  const theme =\n    c.distance(white, background) > c.distance(black, background)\n      ? Theme.enum.dark\n      : Theme.enum.light;\n\n  // Pure white and pure black do not chill well with our interfaces, lets make it more chill.\n  if (isBlackOrWhite(color)) return fallbackColors[theme];\n\n  // Return the color if it's already totally chill and doesn't need to be messed with.\n  if (isChill(color, background)) return color;\n\n  // Mess with the color just enough to make it pass the chillThreshold, but not too far past it.\n  let chillColor = color;\n  while (!isChill(chillColor, background)) {\n    // console.log('loop', chillColor);\n    chillColor = incrementChillness(chillColor, theme);\n  }\n  return chillColor;\n}\n"],"names":["chillThreshold","black","white","Theme","z","fallbackColors","dark","light","incrementChillness","color","theme","slightlyChillerColor","c","brighten","darken","saturate","hex","isBlackOrWhite","isChill","background","chillness","Number","contrast","toFixed","makeColorMoreChill","distance","chillColor"],"mappings":";;;;;;;;;;;;AAIA;;AACA,IAAMA,cAAc,GAAG,GAAvB;IAEaC,KAAK,GAAG;IACRC,KAAK,GAAG;IAERC,KAAK,gBAAGC,KAAC,QAAD,CAAO,CAAC,MAAD,EAAS,OAAT,CAAP;IAGRC,cAAc,0CACxBF,KAAK,QAAL,CAAWG,IADa,IACN,SADM,kBAExBH,KAAK,QAAL,CAAWI,KAFa,IAEL,SAFK;;AAK3B,SAASC,kBAAT,CAA4BC,KAA5B,EAA2CC,KAA3C;AACE,MAAMC,oBAAoB,GACxBD,KAAK,KAAKP,KAAK,QAAL,CAAWG,IAArB,GAA4BM,qBAAC,CAACH,KAAD,CAAD,CAASI,QAAT,CAAkB,IAAlB,CAA5B,GAAsDD,qBAAC,CAACH,KAAD,CAAD,CAASK,MAAT,CAAgB,IAAhB,CADxD;AAGA,SAAOH,oBAAoB,CAACI,QAArB,CAA8B,IAA9B,EAAoCC,GAApC,EAAP;AACD;;SAEeC,eAAeR;AAC7B,SAAOG,qBAAC,CAACH,KAAD,CAAD,CAASO,GAAT,OAAmBf,KAAnB,IAA4BW,qBAAC,CAACH,KAAD,CAAD,CAASO,GAAT,OAAmBd,KAAtD;AACD;SAEegB,QAAQT,OAAeU;MAAAA;AAAAA,IAAAA,aAAqBjB;;;AAC1D,MAAMkB,SAAS,GAAGC,MAAM,CAACT,qBAAC,CAACU,QAAF,CAAWb,KAAX,EAAkBU,UAAlB,EAA8BI,OAA9B,CAAsC,CAAtC,CAAD,CAAxB;AACA,SAAOH,SAAS,GAAGpB,cAAnB;AACD;SAEuBwB,mBACtBf,OACAU;MAAAA;AAAAA,IAAAA,aAAqBjB;;;AAErB,MAAMQ,KAAK,GACTE,qBAAC,CAACa,QAAF,CAAWvB,KAAX,EAAkBiB,UAAlB,IAAgCP,qBAAC,CAACa,QAAF,CAAWxB,KAAX,EAAkBkB,UAAlB,CAAhC,GACIhB,KAAK,QAAL,CAAWG,IADf,GAEIH,KAAK,QAAL,CAAWI,KAHjB;;AAMA,MAAIU,cAAc,CAACR,KAAD,CAAlB,EAA2B,OAAOJ,cAAc,CAACK,KAAD,CAArB;;AAG3B,MAAIQ,OAAO,CAACT,KAAD,EAAQU,UAAR,CAAX,EAAgC,OAAOV,KAAP;;AAGhC,MAAIiB,UAAU,GAAGjB,KAAjB;;AACA,SAAO,CAACS,OAAO,CAACQ,UAAD,EAAaP,UAAb,CAAf,EAAyC;AACvC;AACAO,IAAAA,UAAU,GAAGlB,kBAAkB,CAACkB,UAAD,EAAahB,KAAb,CAA/B;AACD;;AACD,SAAOgB,UAAP;AACD;;;;;;;;;;"}