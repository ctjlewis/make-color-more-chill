{"version":3,"file":"make-color-more-chill.min.mjs","sources":["../src/index.ts"],"sourcesContent":["import c from 'chroma-js';\nimport { z } from 'zod';\n\n// the chillThreshold is the minimum acceptable contrast ratio for a given color\n// against white, as eyeballed by @christianbaroni and @mikedemarais üëÅÔ∏è\nconst chillThreshold = 2.5;\n\nexport const black = '#000000';\nexport const white = '#ffffff';\n\nexport const Theme = z.enum(['dark', 'light']);\nexport type ThemeType = z.infer<typeof Theme>;\n\nexport const fallbackColors = {\n  [Theme.enum.dark]: '#525B66',\n  [Theme.enum.light]: '#25292E',\n};\n\nfunction incrementChillness(color: string, theme: ThemeType) {\n  const slightlyChillerColor =\n    theme === Theme.enum.dark ? c(color).brighten(0.02) : c(color).darken(0.02);\n\n  return slightlyChillerColor.saturate(0.02).hex();\n}\n\nexport function isBlackOrWhite(color: string): boolean {\n  return c(color).hex() === black || c(color).hex() === white;\n}\n\nexport function isChill(color: string, background: string = white): boolean {\n  const chillness = Number(c.contrast(color, background).toFixed(2));\n  return chillness > chillThreshold;\n}\n\nexport default function makeColorMoreChill(\n  color: string,\n  background: string = white\n) {\n  const theme =\n    c.distance(white, background) > c.distance(black, background)\n      ? Theme.enum.dark\n      : Theme.enum.light;\n\n  // Pure white and pure black do not chill well with our interfaces, lets make it more chill.\n  if (isBlackOrWhite(color)) return fallbackColors[theme];\n\n  // Return the color if it's already totally chill and doesn't need to be messed with.\n  if (isChill(color, background)) return color;\n\n  // Mess with the color just enough to make it pass the chillThreshold, but not too far past it.\n  let chillColor = color;\n  while (!isChill(chillColor, background)) {\n    // console.log('loop', chillColor);\n    chillColor = incrementChillness(chillColor, theme);\n  }\n  return chillColor;\n}\n"],"names":["black","white","Theme","z","enum","fallbackColors","dark","light","incrementChillness","color","theme","c","brighten","darken","saturate","hex","isBlackOrWhite","isChill","background","Number","contrast","toFixed","makeColorMoreChill","distance","chillColor"],"mappings":"iDAKA,MAEaA,EAAQ,UACRC,EAAQ,UAERC,EAAQC,EAAEC,KAAK,CAAC,OAAQ,UAGxBC,EAAiB,CAC5B,CAACH,EAAME,KAAKE,MAAO,UACnB,CAACJ,EAAME,KAAKG,OAAQ,WAGtB,SAASC,EAAmBC,EAAeC,GAIzC,OAFEA,IAAUR,EAAME,KAAKE,KAAOK,EAAEF,GAAOG,SAAS,KAAQD,EAAEF,GAAOI,OAAO,MAE5CC,SAAS,KAAMC,eAG7BC,EAAeP,GAC7B,MAnBmB,YAmBZE,EAAEF,GAAOM,OAAmBJ,EAAEF,GAAOM,QAAUd,WAGxCgB,EAAQR,EAAeS,EAAqBjB,GAE1D,OADkBkB,OAAOR,EAAES,SAASX,EAAOS,GAAYG,QAAQ,IAzB1C,aA6BCC,EACtBb,EACAS,EAAqBjB,GAErB,MAAMS,EACJC,EAAEY,SAAStB,EAAOiB,GAAcP,EAAEY,SAhCjB,UAgCiCL,GAC9ChB,EAAME,KAAKE,KACXJ,EAAME,KAAKG,MAGjB,GAAIS,EAAeP,GAAQ,OAAOJ,EAAeK,GAGjD,GAAIO,EAAQR,EAAOS,GAAa,OAAOT,EAGvC,IAAIe,EAAaf,EACjB,MAAQQ,EAAQO,EAAYN,IAE1BM,EAAahB,EAAmBgB,EAAYd,GAE9C,OAAOc"}